"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var s=t[a];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,a,s){return a&&e(t.prototype,a),s&&e(t,s),t}}(),DepartmentApp=function(){function e(t){_classCallCheck(this,e),this.props=Object.assign({},e.defaults,t),this.searchBarInput=document.querySelector(this.props.searchBarInput),this.searchBarClearBtn=document.querySelector(this.props.searchBarClearBtn),this.departmentList=document.querySelector(this.props.departmentList),this.departmentBlock=document.querySelector(this.props.departmentBlock),this.locationEl=this.departmentBlock.querySelector(this.props.locationEl),this.addressEl=this.departmentBlock.querySelector(this.props.addressEl),this.emailEl=this.departmentBlock.querySelector(this.props.emailEl),this.phoneEl=this.departmentBlock.querySelector(this.props.phoneEl),this.mapBlock=document.querySelector(this.props.mapBlock),this.displaySearchQuery=this.displaySearchQuery.bind(this),this.renderDepartmentList=this._debounce(this.renderDepartmentList.bind(this),1e3),this.renderChoosedDepartment=this.renderChoosedDepartment.bind(this),this.createDepartmentBlock=this.createDepartmentBlock.bind(this),this.initMap=this.initMap.bind(this),this.clearInput=this.clearInput.bind(this),this._bindEvents()}return _createClass(e,[{key:"displaySearchQuery",value:function(e){console.log("displaySearchQuery"),this.departmentBlock.classList.add("department-block--display-none"),this.mapBlock.classList.add("department-map--display-none");var t=e.target.value,a="https://api.privatbank.ua/p24api/pboffice?json&address="+t;0===t.length?(this.searchBarClearBtn.classList.add("search-bar__icon-clear--display-none"),this.clearDepartmentList()):(this.searchBarClearBtn.classList.remove("search-bar__icon-clear--display-none"),this.renderDepartmentList(a))}},{key:"renderDepartmentList",value:function(e){var t=this;console.log("renderDepartmentList"),console.log(this.departmentList),fetch(e).then(function(e){return e.json()}).then(function(e){console.log(e),t.clearDepartmentList();for(var a in e)if(a<10){var s=document.createElement("li");s.classList.add("department-list__item"),s.addEventListener("click",t.renderChoosedDepartment),s.innerHTML='<i class="material-icons search-bar__icon-search  noUserSelect">search</i>',s.innerHTML+=e[a].address,s.setAttribute("data-city",e[a].city),s.setAttribute("data-country",e[a].country),s.setAttribute("data-address",e[a].address),s.setAttribute("data-email",e[a].email),s.setAttribute("data-phone",e[a].phone),s.setAttribute("data-name",e[a].name),t.departmentList.appendChild(s)}}).catch(function(e){console.log(e.message)})}},{key:"renderChoosedDepartment",value:function(e){console.log("renderChoosedDepartment"),this.searchBarInput.value=e.target.dataset.address;var t=e.target.dataset.city+", "+e.target.dataset.address;this.clearDepartmentList(),this.createDepartmentBlock(e.target.dataset),this.initMap(t)}},{key:"createDepartmentBlock",value:function(e){console.log("createDepartmentBlockваппвапва"),e.country&&(this.locationEl.innerHTML='<i class="material-icons department-block__icon UserSelect">location_city</i>',this.locationEl.innerHTML+=e.country),e.city&&(this.locationEl.innerHTML+=", "+e.city),e.address&&(this.addressEl.innerHTML='<i class="material-icons department-block__icon UserSelect">place</i>',this.addressEl.innerHTML+=e.address),e.email&&(this.emailEl.innerHTML='<i class="material-icons department-block__icon UserSelect">email</i>',this.emailEl.innerHTML+=e.email),e.phone&&(this.phoneEl.innerHTML='<i class="material-icons department-block__icon UserSelect">phone</i>',this.phoneEl.innerHTML+=e.phone),this.departmentBlock.classList.remove("department-block--display-none"),this.mapBlock.classList.remove("department-map--display-none")}},{key:"clearInput",value:function(){this.searchBarClearBtn.classList.add("search-bar__icon-clear--display-none"),this.departmentBlock.classList.add("department-block--display-none"),this.mapBlock.classList.add("department-map--display-none"),this.searchBarInput.value="",this.clearDepartmentList(),this.searchBarInput.focus()}},{key:"initMap",value:function(e){var t=e,a=new google.maps.Geocoder,s={zoom:10,center:new google.maps.LatLng(50.27,30.3),mapTypeControl:!0,mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.DROPDOWN_MENU},navigationControl:!0,mapTypeId:google.maps.MapTypeId.ROADMAP},n=new google.maps.Map(this.mapBlock,s);a&&a.geocode({address:t},function(e,a){if(a==google.maps.GeocoderStatus.OK)if(a!=google.maps.GeocoderStatus.ZERO_RESULTS){n.setCenter(e[0].geometry.location);var s=new google.maps.InfoWindow({content:"<b>"+t+"</b>",size:new google.maps.Size(150,50)}),r=new google.maps.Marker({position:e[0].geometry.location,map:n,title:t});google.maps.event.addListener(r,"click",function(){s.open(n,r)})}else console.log("No results found");else console.log("Geocode was not successful for the following reason: "+a)})}},{key:"clearDepartmentList",value:function(){for(console.log("clearDepartmentList");this.departmentList.firstChild;)this.departmentList.removeChild(this.departmentList.firstChild)}},{key:"_debounce",value:function(e,t,a){var s=void 0;return function(){var n=this,r=arguments;clearTimeout(s),s=setTimeout(function(){s=null,a||e.apply(n,r)},t)}}},{key:"_bindEvents",value:function(){this.searchBarInput.addEventListener("keyup",this.displaySearchQuery),this.searchBarClearBtn.addEventListener("click",this.clearInput)}}]),e}();DepartmentApp.defaults={searchBarInput:".search-bar__input",searchBarClearBtn:".search-bar__icon-clear",departmentList:".depatment-list",departmentBlock:".department-block",mapBlock:".department-map",locationEl:"#location",addressEl:"#address",emailEl:"#email",phoneEl:"#phone"},new DepartmentApp;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
